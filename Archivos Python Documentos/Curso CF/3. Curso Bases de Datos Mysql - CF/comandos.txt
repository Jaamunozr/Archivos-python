from os import system as C

C("clear")

C("sudo systemctl status mysql")   
Este comando nos permite ver si la base de datos esta activa

#C("sudo systemctl enable mysql")
#C("/etc/init.d/mysql restart")
#En caso de que la base de datos no esté habilitada ejecutamos el anterior comando

#C("sudo systemctl stop mysql")
#C("/etc/init.d/mysql restart")
#Este comando deshabilitamos la base de datos

##C("sudo systemctl restart mysql")
#Otra gran alternativa para reiniciar el servidor y no igresar contraseñas

#C("sudo mysql -u root -p")
#Nos pide contraseña de MySQL y luego ingresamos como administradores

#C("sudo mysql -u root")
# NO NOS pide contraseña de MySQL y luego ingresamos como administradores


#C("quit;")
#Comando para salir del sistema


#C("sudo mysql -u root -p -h localhost")
#Comando para ingresar

Comados:


system clear  
#Borra la pantalla

SET @nombre = "Codi";
#Creacion de variables
SET @nombre := "Codi";
#Otra forma de creacion de variables

SET @curso := "Base de datos", @gestor = "Mysql";
#Multiples variables

SELECT @nombre;
#Visualizamos el contenido y la variable "nombre" en una tabla


SELECT @nombre, @curso, @gestor;
#La coma la usaremos para multiples elementos
#Las variables creadas dentro de la sesion le pertenecen solo a la secion
#Si salimos o cerramos sesion, nuestras variables se borran 

Ahora Crearemos una base de datos:

CREATE DATABASE libreria_cf;
#Creacion de la base de datos

SHOW DATABASES;
#Visualizamos las bases de datos actuales:
+--------------------+
| Database           |
+--------------------+
| information_schema |
| libreria_cf        |
| mysql              |
| performance_schema |
| sys                |
+--------------------+



------------------------


DROP DATABASE libreria_cf;
#Comando para eliminar bases de datos, tener cuidado, no se pueden volver a recuperar



USE libreria_cf;
#Ahora trabajaremos sobre esa base de datos

/* ¿Que tipo de entidades? Autores
Nombre: Autores
*/

Nombre
Genero
Fecha de nacimiento
País de origen

columna y el tipo de dato
--Generamos la tabla 
CREATE TABLE autores(
    autor_ID INT,#Las columnas se separan por "Comas" #--Estos campos no serán duplicados
    nombre VARCHAR(25),  #Columna compuesta 
    apellido VARCHAR(25),
    genero CHAR(1),--M o F
    Fecha_de_nacimiento DATE,
    Pais_Origen VARCHAR(40)
);


--Se copia y se pega la creación de la anterior tabla SIN LOS COMENTARIOS


 
Tipos de datos
Abrir temario playlist_play

En general, la mayoría de los servidores de base de datos nos permiten almacenar los
mismo tipo de datos, como strings, fechas y número.

En este post, listamos los tipos de datos que más utilizarás en tu día a día.
Alfanuméricos

    CHAR
    VARCHAR

En ambos casos nosotros debemos de especificar la longitud máxima que podrá 
almacenar el campo. Opcionalmente podemos definir el charset que almacenará.

varchar(20) character set utf8


    Con MySQL nosotros podemos establecer el charset que usará la base de datos 
    desde su creación create database nombre character set utf8;

    NOTA: 
    UTF-8 es un formato de codificación de caracteres Unicode e ISO 10646 que 
    utiliza símbolos de longitud variable. UTF-8 fue creado por Robert C. Pike 
    y Kenneth L. Thompson. Está definido como estándar por la RFC 3629 de la 
    Internet Engineering Task Force.​

Números enteros

Tipo 	Rango
Tinyint 	-128 a 127
Smallint 	-32,768 a 32,767
Mediumint 	−8,388,608 a 8,388,607
Int 	−2,147,483,648 a 2,147,483,647
Bigint 	−9,223,372,036,854,775,808 a 9,223,372,036,854,775,807

Números flotantes

Para los flotantes encontraremos dos tipos

    Float
    Double

En ambos casos nosotros debemos de especificar la cantidad de dígitos que almacenará
la columna antes y después del punto (p,s)

precio FLOAT(3, 2)

En este caso la columna podrá almacenar hasta tres dígitos como enteros y dos después
del punto decimal.
Por ejemplo 999.99


Tiempo

Tipo 	Formato default
Date 	YYYY-MM-DD
Datetime 	YYYY-MM-DD HH:MI:SS
Timestamp 	YYYY-MM-DD HH:MI:SS
Time 	HHH:MI:SS



SHOW TABLES;
#Muestra las tablas que tenemos creadas actualmente

SELECT DATABASE();
#Retorna indormación sobre la base en que estamos trabajando

DROP TABLE autores;
#Eimina la tabla de nombre "autores", no se puede recuperar esa tabla

SHOW COLUMNS FROM autores;
#Obtener informacion de tablas, su definicion
+---------------------+-------------+------+-----+---------+-------+
| Field               | Type        | Null | Key | Default | Extra |
+---------------------+-------------+------+-----+---------+-------+
| autor_ID            | int(11)     | YES  |     | NULL    |       |
| nombre              | varchar(25) | YES  |     | NULL    |       |
| apellido            | varchar(25) | YES  |     | NULL    |       |
| genero              | char(1)     | YES  |     | NULL    |       |
| Fecha_de_nacimiento | date        | YES  |     | NULL    |       |
| Pais_Origen         | varchar(40) | YES  |     | NULL    |       |
+---------------------+-------------+------+-----+---------+-------+
6 rows in set (0.00 sec)
#Columnas y el tipo de datos que almacenan 

#Tambien podemos hacer 
DESC autores;



#Creacion de tablas parecidas a otras:
CREATE TABLE usuarios LIKE autores;
#Copia la tabla autores y la nombra usuarios, visualizamos las tablas de la base y su descripcion (DESC)



#Insertamos registros a una tabla 
#Aquí no importa el orden de las columnas 
INSERT INTO autores(autor_ID, nombre, apellido, genero, Fecha_de_nacimiento, Pais_Origen)
VALUES(1,'Test autor','Test autor','M','2018-01-30','Colombia'); --Se colocan los valores para cada columna y sí importa el orden

INSERT INTO autores(autor_ID, nombre)
VALUES(1,'Test autor');


#OBTENER TODOS LOS REGISTROS DE UNA TABLA 
SELECT*FROM autores;


#Para Insertar una sentencia con nuesos registro es usa lo siguiente:
INSERT INTO autores(autor_ID, nombre, apellido, genero, Fecha_de_nacimiento, Pais_Origen)
VALUES(1,'Test autor','Test autor','M','2018-01-30','Colombia'),
      (2,'Test autor','Test autor','M','2018-01-30','Colombia'),
      (3,'Test autor','Test autor','M','2018-01-30','Colombia'),
      (4,'Test autor','Test autor','M','2018-01-30','Colombia');

#A cada valor le corresponde una columna 


#Ejemplo de como ejecutar archivos MYSQL en "sentencias.sl"


#Para ejecutar un archivo "sentencias.sql" sin iniciar sesión desde la terminal:

sudo mysql -u root -p </home/munoz/Documentos/Archivos-python/"Archivos Python Documentos"/"Curso Bases de Datos Mysql - CF"/sentencias.sql

#Para ejecutar un archivo "sentencias.sql" iniciando sesión:
SOURCE Documentos/Archivos-python/Archivos Python Documentos/Curso Bases de Datos Mysql - CF/sentencias.sql;


#Condicionar una sentencia 
DROP DATABASE IF EXISTS libreria_cf; #sI EXISTE ESA LIBRERÍA, ELIMINELA


#Consultas rápidas y ejecutar cualquier sentencia desde el terminal sin acceder a la base de datos:
#En terminal:
sudo mysql -u root -p libreria_cf -e "SELECT * FROM autores"


#RESTRICCIONES
#Se usan para que las tablas no almacenen datos corruptos o vasios
 


CREATE TABLE IF NOT EXISTS autores(
    autor_ID INT,
    nombre VARCHAR(25) NOT NULL, #Primer restriccion, no deben ingresar valores nulos
    apellido VARCHAR(25),
    genero CHAR(1),
    Fecha_de_nacimiento DATE,
    Pais_Origen VARCHAR(40)
);
#Al querer insertar valores en nuestra tabla observamos que no esta mi "nombre" ni "apellido"
INSERT INTO autores(autor_ID, genero, Fecha_de_nacimiento, Pais_Origen)
VALUES(1,'M','2020-03-21','Colombia');
#ESto retorna el siguiente error:
ERROR 1364 (HY000): Field 'nombre' doesn't have a default value
#Lo que nos indica que no posee el valor que se debe ingresar por defecto


#Para agregar valores y que estos NO SE PUEDAN REPETIR DESPUES, agregaos "UNIQUE" al final del comando
seudonimo VARCHAR(50) UNIQUE,

#Cuando quiero agregar una nueva fila con los mismos datos, por ejemplo
INSERT INTO autores(autor_ID, nombre, apellido,seudonimo ,genero, Fecha_de_nacimiento, Pais_Origen)
VALUES(10,'Javier','Muñoz',"Javi M",'M','1993-12-19','Colombia');
#Me mostrará lo siguiente 
ERROR 1062 (23000): Duplicate entry 'Javi M' for key 'seudonimo'
#Ese Dato ya fue agregado, pero solo mirará el dato que está en la columna "seudonimo" y ese no debe estar repetido



#Valores por defecto y fecha de ingreso de un dato
fecha_Creación DATETIME DEFAULT current_timestamp
#Luego de ingresar los datos y posteriormente otro dato, todos se guardarán con l afecha y hora del momento, si y solo si no se ingresa otro dato.
INSERT INTO autores(autor_ID, nombre, apellido,seudonimo ,genero, Fecha_de_nacimiento, Pais_Origen, Fecha_Creación)
VALUES(10,'Javier',"Perez","Javi P",'M','1993-12-19','Colombia', NOW()), #Comando "NOW()" me permite ver la fecha y hora del momento
      (10,'Andres',"Romero","And R",'M','1993-12-19','Colombia',"2020-01-01 00:00:00")#Ajustamos la fecha al momento que deseamos
;
SELECT * FROM autores;